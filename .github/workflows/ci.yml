name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install -r backend/requirements-dev.txt # Installs pytest, pytest-cov etc.
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Create test environment
      run: |
        # Create logs directory
        mkdir -p logs/backend logs/frontend
        
        # Create test database
        # Assuming database.py can be run from root or paths are handled by it.
        # If init_db needs to be run from backend dir:
        # (cd backend && python -c "from database import init_db; init_db()")
        # For now, assume it's fine from root if PYTHONPATH is implicitly correct or not needed.
        python backend/database.py # If database.py has a main guard for init_db
        # Or more explicitly:
        # python -c "import sys; sys.path.append('backend'); from database import init_db; init_db()"
        # Safest is to cd if it relies on relative paths not accounting for CWD
        (cd backend && python -c "from database import init_db; init_db()")

        # Create test environment file at project root
        echo "LLM_PROVIDER=openai" > .env
        echo "OPENAI_API_KEY=test_key" >> .env
        echo "OPENAI_MODEL=gpt-3.5-turbo" >> .env
        echo "PYTHONPATH=." >> .env # Ensure backend modules can be found by pytest if needed
    
    - name: Run full test suite
      run: |
        chmod +x run_tests.sh
        ./run_tests.sh

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install linting tools
      run: |
        pip install flake8 black isort
    
    - name: Run Python linting
      run: |
        cd backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        black --check . || true
        isort --check-only . || true
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint || true
